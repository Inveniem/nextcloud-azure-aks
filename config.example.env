##
# This is an example configuration file for the scripts in this folder.
#
# You must tailor it to meet your needs, or your installation of Nextcloud will
# fail.
#
# @author Guy Elsmore-Paddock (guy@inveniem.com)
# @copyright Copyright (c) 2019-2021, Inveniem
# @license GNU AGPL version 3 or any later version
#

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
source "${SCRIPT_DIR}/constants.sh"

################################################################################
# Global Settings
################################################################################

##
# The Azure region in which resources should be provisioned.
#
LOCATION="West US 2"

################################################################################
# Pod Image Settings
################################################################################

##
# Which of two possible configurations are used for running Nextcloud:
#  - `apache`: Pods consist of a single container that runs PHP on Apache with
#    `mod_php`.
#
#  - `fpm-nginx`: Pods consist of two containers; one runs PHP on php-fpm and
#    the other exposes it via an nginx reverse proxy that also serves-up
#    static content.
#
POD_TYPE="apache"

################################################################################
# Kubernetes Cluster Settings
################################################################################

##
# The resource group in which the AKS instance is deployed, NOT the resource
# group that AKS manages for all of its resources.
#
KUBE_RESOURCE_GROUP="my-kube-parent-resource-group"

##
# The name of the AKS resource within your Azure account.
#
KUBE_NAME="my-kube-instance"

##
# The local context in which to deploy resources.
#
KUBE_CONTEXT="nc-dev"

################################################################################
# Docker Registry (ACR) Settings
################################################################################

##
# The name and hostname of your Docker registry.
#
# By default, this is configured for Azure Container Registry. Feel free to
# modify REGISTRY_HOST if this is not the case.
#
REGISTRY_NAME="myregistry"
REGISTRY_HOST="${REGISTRY_NAME}.azurecr.io"

##
# The desired name for a new service principle that will have access to
# the Docker registry identified above. This MUST be unique within the AD
# tenant.
#
REGISTRY_SERVICE_PRINCIPLE_NAME="my-kube-acr"

################################################################################
# Nextcloud Configuration Settings
################################################################################

##
# The space-separated name of each hostname from which Nextcloud should be
# accessible.
#
# This must accurately match each of the hostnames you are configuring for the
# service, or you will not be able to access your Nextcloud installation after
# deployment without having to SSH-in to modify your config.php file directly.
NEXTCLOUD_TRUSTED_DOMAINS='nextcloud1.example.com nextcloud2.example.com'

##
# Exposes NEXTCLOUD_TRUSTED_DOMAINS as an array, for convenience.
#
# You should not need to modify this logic/setting.
#
NEXTCLOUD_TRUSTED_DOMAIN_LIST=( ${NEXTCLOUD_TRUSTED_DOMAINS} )

##
# The hostname that should be considered the "primary" way to access Nextcloud.
#
# This defaults to the first hostname specified in
# NEXTCLOUD_TRUSTED_DOMAIN_LIST (which is typically populated automatically from
# NEXTCLOUD_TRUSTED_DOMAINS).
#
NEXTCLOUD_PRIMARY_HOSTNAME="${NEXTCLOUD_TRUSTED_DOMAIN_LIST[0]}"

##
# The credentials for the Nextcloud admin account to create after deployment.
#
NEXTCLOUD_ADMIN_USER="NextcloudAdmin"
NEXTCLOUD_ADMIN_PASSWORD="NextcloudAdminPassword"

##
# The download URLs from the Nextcloud App Store to any custom apps you want in
# available in the deployed image.
#
NEXTCLOUD_CUSTOM_APPS=(
    'https://github.com/westberliner/checksum/releases/download/0.4.5/checksum.tar.gz'
    'https://github.com/nextcloud/files_antivirus/releases/download/v3.2.1/files_antivirus.tar.gz'
    'https://github.com/nextcloud/files_automatedtagging/releases/download/v1.9.1/files_automatedtagging-1.9.1.tar.gz'
    'https://github.com/nextcloud/files_downloadactivity/releases/download/v1.8.0/files_downloadactivity-1.8.0.tar.gz'
    'https://github.com/nextcloud/files_rightclick/releases/download/v0.15.1/files_rightclick.tar.gz'
    'https://github.com/gino0631/nextcloud-metadata/releases/latest/download/metadata.tar.gz'
    'https://github.com/owncloud/music/releases/download/v1.2.0/music_1.2.0_nc-signed.tar.gz'
    'https://github.com/pbek/ownbackup/releases/download/19.9.0/ownbackup-nc.tar.gz'
    'https://github.com/rullzer/previewgenerator/releases/download/v2.3.0/previewgenerator.tar.gz'
    'https://github.com/nextcloud/user_external/releases/download/v1.0.0/user_external-1.0.0.tar.gz'
    'https://github.com/nextcloud/user_saml/releases/download/v3.2.3/user_saml-3.2.3.tar.gz'
)

##
# The number of instances of Nextcloud to have running concurrently, to maximize
# availability.
#
# NOTE: This MUST be set to `1` during initial install, so that only one
# instance is attempting to perform installation. Then, once Nextcloud is
# running and stable, you can adjust it to 2+ and run ./deploy_nextcloud_app.sh
# to increase availability.
#
NEXTCLOUD_REPLICA_COUNT=1

##
# Control whether or not the Nextcloud configuration files are writable.
#
# You should not need to modify this logic/setting.
#
# The default behavior here is that the configuration files are NOT writable
# once there are multiple replicas. Per the note above for
# `NEXTCLOUD_REPLICA_COUNT`, installation should only be attempted with a
# single replica deployed. Then, once installation is complete and additional
# replicas are added to the deployment, the configuration files are made
# read-only to ensure that all instances have a consistent view of the
# configuration, the installer cannot be run again, and no single instance can
# accidentally overwrite the configuration.
#
# This value is also exposed to the container at run-time as
# `NEXTCLOUD_CONFIG_READ_ONLY`.
#
#
if [[ "${NEXTCLOUD_REPLICA_COUNT}" -gt 1 ]]; then
    NEXTCLOUD_CONFIG_READ_ONLY="true"
else
    NEXTCLOUD_CONFIG_READ_ONLY="false"
fi

################################################################################
# MySQL Database Settings
################################################################################

##
# The hostname, database, and access credentials for the Nextcloud MySQL
# database.
#
# The database must already exist, with the appropriate GRANT permissions,
# before attempting to deploy Nextcloud. The `./drop_nextcloud_db.sh` script
# can be used to "clean out" and re-create this database, as needed when testing
# out deployments.
#
MYSQL_HOST="my-live.mysql.database.azure.com"
MYSQL_DATABASE="nextcloud"
MYSQL_USER="nextcloud@my-live"
MYSQL_PASSWORD="MySQLPassword"

################################################################################
# Redis Settings
################################################################################

##
# The password used to authenticate Nextcloud to Redis.
#
# This provides extra security in case any applications in the cluster where
# Nextcloud is running are compromised and try to exploit Redis access.
#
REDIS_AUTH_PASSWORD="my-redis-password"

################################################################################
# Storage Account Settings
################################################################################

##
# The resource group in which the storage account being used by Nextcloud should
# be automatically provisioned.
#
STORAGE_RESOURCE_GROUP="my-nextcloud-storage"

##
# The name of the storage account resource to create.
#
# Azure suffixes this with ".file.core.windows.net" to create a hostname.
#
STORAGE_ACCOUNT_NAME="mynextcloud"

##
# The product SKU of the storage account to create.
#
#STORAGE_SKU="Premium_LRS"
STORAGE_SKU="Standard_LRS"

##
# The kind of storage account to create.
#
# During the preview period, Premium storage accounts can only be created in
# certain regions.
#
#STORAGE_KIND="FileStorage"
STORAGE_KIND="StorageV2"

##
# A prefix to add to the name of each persistent volume, to differentiate
# volumes created for different Kubernetes regions.
#
STORAGE_PV_PREFIX="dev"

##
# An array of the names of each of the shares that should be provisioned on
# Azure Files storage.
#
STORAGE_FILE_SHARES=(
    'nextcloud-config'
    'nextcloud-data'
    'client1'
    'client2'
    'client3'
)

################################################################################
# Secret Names
################################################################################
# The names of ALL secrets must be unique, and must not overlap with any secrets
# from any other application running in the same namespace on the Kubernetes
# cluster.

##
# The name of the secret within Kubernetes that will be created and referenced
# for storing the initial admin username and password.
#
KUBE_NEXTCLOUD_ADMIN_CREDS_SECRET="nextcloud-storage-admin-creds"

##
# The name of the secret within Kubernetes that will be created and referenced
# for storing the database host name, database name, user name, and password.
#
KUBE_NEXTCLOUD_MYSQL_CREDS_SECRET="nextcloud-storage-mysql-creds"

##
# The name of the secret within Kubernetes that will be created and referenced
# for accessing Azure Files shares on the Nextcloud storage account.
#
KUBE_FILES_STORAGE_ACCOUNT_SECRET="nextcloud-storage-azure-files-creds"

##
# The name of the secret holding the password clients use to connect to Redis.
#
KUBE_REDIS_AUTH_SECRET="nextcloud-storage-redis-creds"

##
# The name of the secret holding the Redis configuration.
#
# BUGBUG: We have to use a secret for storing the Redis configuration because
# we are using Redis 5.x which does not support an ACL file, so the password
# has to be baked into the redis.conf file. Redis version 6 is not yet
# well-supported by Nextcloud.
#
KUBE_REDIS_CONFIG_SECRET="nextcloud-storage-redis-config"

##
# The name of the secret within Kubernetes that will be created and referenced
# for accessing the Docker registry (usually ACR).
#
ACR_DOCKER_CREDS_SECRET="nextcloud-acr-docker-creds"

################################################################################
# New Relic Monitoring Settings (Optional)
################################################################################

##
# Your New Relic subscription key.
#
# Leave blank if you do not use New Relic monitoring.
#
NEW_RELIC_KEY=""

##
# The URL to the New Relic PHP agent (optional).
#
# The default downloads NR PHP agent 9.16.0.295 for PHP 5+. Use the latest shown
# here: https://download.newrelic.com/php_agent/release/
#
# Leave blank if you do not use New Relic monitoring.
#
NEW_RELIC_AGENT_URL="https://download.newrelic.com/php_agent/release/newrelic-php5-9.16.0.295-linux.tar.gz"

##
# The name by which you would like Nextcloud to identify itself in New Relic.
#
# Leave blank if you do not use New Relic monitoring.
#
NEW_RELIC_APP="Nextcloud"
